{"version":3,"sources":["container/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","Typography","Container","useState","query","setQuery","className","style","margin","level","value","height","onChange","extensions","sql","dialect","PostgreSQL","onClick","fetch","method","cache","headers","body","JSON","stringify","then","response","json","data","console","log","App","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAMOA,EAASC,IAATD,MAsCQE,EApCY,WAAO,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,KAgB7B,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,+BACA,sBAAKA,UAAU,gBAAf,UACI,cAACN,EAAD,CAAOO,MAAO,CAACC,OAAO,QAASC,MAAO,EAAtC,uBACA,cAAC,IAAD,CACIC,MAAON,EACPO,OAAQ,QACRC,SAAU,SAAAF,GAAK,OAAIL,EAASK,IAC5BG,WAAY,CAACC,YAAI,CAACC,QAASC,SAE/B,cAAC,IAAD,CAAQC,QAxBJ,WACZC,MAAM,iBAAiB,CACnBC,OAAQ,OACRC,MAAM,WACNC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACpB,YAEzBqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,OAclB,+BAEJ,qBAAKtB,UAAU,iBAAf,SACI,cAACN,EAAD,CAAOS,MAAO,EAAd,kCChCRT,G,OAAUC,IAAVD,OAUO+B,EATH,WAER,OACI,sBAAKzB,UAAU,MAAMC,MAAO,CAACyB,QAAS,IAAtC,UACI,cAAC,EAAD,wDACA,cAAC,EAAD,QCEGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"js/main.e3fba50f.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { PostgreSQL, sql } from '@codemirror/lang-sql';\nimport { Typography, Button } from 'antd';\nimport './index.css'\n\nconst {Title} = Typography\n\nconst Container:React.FC = () => {\n    const [query, setQuery] = useState('')\n\n    const onclick = () => {\n        fetch(\"/api/get_query\",{\n            method: 'POST',\n            cache:'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({query}) \n        })\n        .then(response => response.json())\n        .then(data => console.log(data));\n    }\n   \n    return (\n        <div className=\"main-container\">\n            <div className=\"schema-container\"> Database Schema </div>\n            <div className=\"sql-container\">\n                <Title style={{margin:'auto'}} level={3}>SQL Query</Title>\n                <CodeMirror\n                    value={query}\n                    height={'300px'}\n                    onChange={value => setQuery(value)}\n                    extensions={[sql({dialect: PostgreSQL})]}\n                    />\n                <Button onClick={onclick}>Annotate Query</Button>\n            </div>\n            <div className=\"plan-container\">\n                <Title level={3}>Execution Plan</Title>\n            </div>\n\n        </div>\n    )\n}\nexport default Container","import React from 'react';\nimport { Typography} from 'antd';\nimport Container from './container'\nimport './App.css';\n\n// const test_input = 'select * from customer C, orders O where C.c_custkey = O.o_custkey;'\nconst { Title } = Typography;\nconst App = () => {\n\n    return (\n        <div className=\"App\" style={{padding: 20}}>\n            <Title>Query Execution Plan Annotator - Group 41</Title>\n            <Container/>\n        </div>\n)};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}